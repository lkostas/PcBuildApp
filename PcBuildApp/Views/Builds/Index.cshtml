@model IEnumerable<PcBuildApp.Data.Build>

@{
    ViewData["Title"] = ViewBag.PageTitle ?? "Community Builds";
}

<div class="container mt-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-md-8">
            <h2 class="h3 mb-2">
                <i class="bi bi-collection text-primary me-2"></i>
                @ViewBag.PageTitle
            </h2>
            <p class="text-muted">
                @if (ViewBag.PageTitle == "My Builds")
                {
                    <span>Manage and view your PC build configurations</span>
                }
                else
                {
                    <span>Explore amazing PC builds shared by the community</span>
                }
            </p>
        </div>
        <div class="col-md-4 text-end">
            @if (User.Identity.IsAuthenticated)
            {
                <a href="@Url.Action("Create", "Builds")" class="btn btn-success">
                    <i class="bi bi-plus-circle"></i> Create New Build
                </a>
            }
            else
            {
                <a href="@Url.Action("Login", "Account")" class="btn btn-primary">
                    <i class="bi bi-person"></i> Login to Create Build
                </a>
            }
        </div>
    </div>

    <!-- Quick Stats -->
    @if (ViewBag.PageTitle == "Community Builds")
    {
        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card bg-light border-0">
                    <div class="card-body py-3">
                        <div class="row text-center">
                            <div class="col-md-4">
                                <h5 class="mb-1">@Model.Count()</h5>
                                <small class="text-muted">Public Builds</small>
                            </div>
                            <div class="col-md-4">
                                <h5 class="mb-1">@Model.Count(b => b.IsCompleted)</h5>
                                <small class="text-muted">Completed Builds</small>
                            </div>
                            <div class="col-md-4">
                                <h5 class="mb-1">$@Model.Where(b => b.TotalPrice > 0).DefaultIfEmpty().Average(b => b?.TotalPrice ?? 0).ToString("N0")</h5>
                                <small class="text-muted">Average Build Cost</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Builds Grid -->
    <div class="row">
        @if (Model != null && Model.Any())
        {
            @foreach (var build in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body">
                            <!-- Build Header -->
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h5 class="card-title mb-0">@build.Name</h5>
                                <div class="d-flex gap-1">
                                    @if (build.IsCompleted)
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle"></i> Completed
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="bi bi-tools"></i> In Progress
                                        </span>
                                    }
                                    
                                    @if (build.IsPublic)
                                    {
                                        <span class="badge bg-info">
                                            <i class="bi bi-eye"></i> Public
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-eye-slash"></i> Private
                                        </span>
                                    }
                                </div>
                            </div>

                            <!-- Build Description -->
                            @if (!string.IsNullOrEmpty(build.Description))
                            {
                                <p class="card-text text-muted mb-3">
                                    @(build.Description.Length > 120 ? 
                                      build.Description.Substring(0, 120) + "..." : 
                                      build.Description)
                                </p>
                            }

                            <!-- Build Stats -->
                            <div class="row text-center mb-3">
                                <div class="col-6">
                                    <div class="border-end">
                                        <h6 class="text-success mb-1">$@build.TotalPrice.ToString("N0")</h6>
                                        <small class="text-muted">Total Cost</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <h6 class="mb-1">@build.TotalWattage W</h6>
                                    <small class="text-muted">Power Draw</small>
                                </div>
                            </div>

                            <!-- Build Date -->
                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="bi bi-calendar3"></i>
                                    Created @build.InsertedAt.ToString("MMM dd, yyyy")
                                </small>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-grid gap-2">
                                <a href="@Url.Action("Details", "Builds", new { id = build.Id })" 
                                   class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-eye"></i> View Details
                                </a>

                                @if (User.Identity.IsAuthenticated)
                                {
                                    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                                    
                                    @if (currentUserId != null && build.UserId.ToString() == currentUserId)
                                    {
                                        <!-- Owner actions -->
                                        <div class="d-flex gap-2">
                                            <a href="@Url.Action("Edit", "Builds", new { id = build.Id })" 
                                               class="btn btn-warning btn-sm flex-fill">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                            <button class="btn btn-outline-danger btn-sm flex-fill" 
                                                    onclick="confirmDelete(@build.Id, '@build.Name')">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </div>
                                    }
                                    else if (build.IsPublic)
                                    {
                                        <!-- Clone button for public builds -->
                                        <button class="btn btn-success btn-sm" 
                                                onclick="cloneBuild(@build.Id, '@build.Name')">
                                            <i class="bi bi-files"></i> Clone Build
                                        </button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <!-- Empty State -->
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="bi bi-collection" style="font-size: 5rem; color: #e9ecef;"></i>
                    <h4 class="mt-3 text-muted">
                        @if (ViewBag.PageTitle == "My Builds")
                        {
                            <span>No Builds Created Yet</span>
                        }
                        else
                        {
                            <span>No Public Builds Available</span>
                        }
                    </h4>
                    <p class="text-muted mb-4">
                        @if (ViewBag.PageTitle == "My Builds")
                        {
                            <span>Start building your dream PC configuration today!</span>
                        }
                        else
                        {
                            <span>Be the first to share your PC build with the community.</span>
                        }
                    </p>
                    
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a href="@Url.Action("Create", "Builds")" class="btn btn-primary btn-lg">
                            <i class="bi bi-plus-circle"></i> Create Your First Build
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Register", "Account")" class="btn btn-primary btn-lg">
                            <i class="bi bi-person-plus"></i> Join to Start Building
                        </a>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function cloneBuild(buildId, buildName) {
            const newName = prompt(`Enter a name for your cloned build:`, `${buildName} (Copy)`);
            if (newName && newName.trim()) {
                // This will be implemented when we add the clone functionality
                alert(`Build "${buildName}" will be cloned as "${newName}"\n\n(Clone functionality coming soon)`);
            }
        }
        
        function confirmDelete(buildId, buildName) {
            if (confirm(`Are you sure you want to delete "${buildName}"?\n\nThis action cannot be undone.`)) {
                // Submit delete form
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete", "Builds")/' + buildId;
                
                // Add CSRF token if needed
                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const hiddenToken = token.cloneNode();
                    form.appendChild(hiddenToken);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}