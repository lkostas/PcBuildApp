// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PcBuildApp.Data;

#nullable disable

namespace PcBuildApp.Migrations
{
    [DbContext(typeof(PcBuildAppDbContext))]
    [Migration("20250822183245_SeedComponentData")]
    partial class SeedComponentData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PcBuildApp.Data.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TotalWattage")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Builds_Name");

                    b.HasIndex(new[] { "UserId" }, "IX_Builds_UserId");

                    b.ToTable("Builds", (string)null);
                });

            modelBuilder.Entity("PcBuildApp.Data.BuildComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildId")
                        .HasColumnType("integer");

                    b.Property<int>("ComponentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<decimal>("PriceAtTime")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BuildId" }, "IX_BuildComponents_BuildId");

                    b.HasIndex(new[] { "ComponentId" }, "IX_BuildComponents_ComponentId");

                    b.ToTable("BuildComponents", (string)null);
                });

            modelBuilder.Entity("PcBuildApp.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Categories_Name")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComponentType = "CPU",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Processors"
                        },
                        new
                        {
                            Id = 2,
                            ComponentType = "GPU",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Graphics Cards"
                        },
                        new
                        {
                            Id = 3,
                            ComponentType = "RAM",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Memory"
                        },
                        new
                        {
                            Id = 4,
                            ComponentType = "Storage",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Storage"
                        },
                        new
                        {
                            Id = 5,
                            ComponentType = "PSU",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Power Supplies"
                        },
                        new
                        {
                            Id = 6,
                            ComponentType = "Motherboard",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Motherboards"
                        },
                        new
                        {
                            Id = 7,
                            ComponentType = "Cooling",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Cooling"
                        },
                        new
                        {
                            Id = 8,
                            ComponentType = "Case",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Cases"
                        });
                });

            modelBuilder.Entity("PcBuildApp.Data.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("boolean");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<int?>("TDP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Components_CategoryId");

                    b.HasIndex(new[] { "ManufacturerId" }, "IX_Components_ManufacturerId");

                    b.HasIndex(new[] { "Name" }, "IX_Components_Name");

                    b.ToTable("Components", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            Description = "AMD B550 motherboard with WiFi",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 5,
                            Model = "B550-F",
                            Name = "ASUS ROG STRIX B550-F",
                            Price = 189.99m,
                            StockQuantity = 15,
                            TDP = 15
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            Description = "Intel Z690 motherboard with DDR5 support",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 5,
                            Model = "Z690-A",
                            Name = "ASUS Prime Z690-A",
                            Price = 249.99m,
                            StockQuantity = 12,
                            TDP = 20
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 7,
                            Description = "Premium air cooler for high-end CPUs",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 6,
                            Model = "NH-D15",
                            Name = "Noctua NH-D15",
                            Price = 99.99m,
                            StockQuantity = 20,
                            TDP = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 7,
                            Description = "240mm liquid cooler with RGB",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 4,
                            Model = "H100i",
                            Name = "Corsair H100i RGB",
                            Price = 149.99m,
                            StockQuantity = 18,
                            TDP = 5
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 8,
                            Description = "Silent mid-tower case with excellent airflow",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 7,
                            Model = "Define 7",
                            Name = "Fractal Design Define 7",
                            Price = 169.99m,
                            StockQuantity = 10,
                            TDP = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 8,
                            Description = "Mid-tower case optimized for airflow",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsInStock = true,
                            ManufacturerId = 4,
                            Model = "4000D",
                            Name = "Corsair 4000D Airflow",
                            Price = 94.99m,
                            StockQuantity = 25,
                            TDP = 0
                        });
                });

            modelBuilder.Entity("PcBuildApp.Data.ComponentSpecs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BaseClock")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("BoostClock")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Chipset")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ComponentId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CoreClock")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("Cores")
                        .HasColumnType("integer");

                    b.Property<string>("EfficiencyRating")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("IOPS")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Latency")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("MaxRAM")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MemoryBandwidth")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int?>("RAMSlots")
                        .HasColumnType("integer");

                    b.Property<int?>("ReadSpeed")
                        .HasColumnType("integer");

                    b.Property<string>("Socket")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Speed")
                        .HasColumnType("integer");

                    b.Property<int?>("StorageCapacity")
                        .HasColumnType("integer");

                    b.Property<int?>("TDP")
                        .HasColumnType("integer");

                    b.Property<int?>("Threads")
                        .HasColumnType("integer");

                    b.Property<int?>("VRAM")
                        .HasColumnType("integer");

                    b.Property<int?>("Wattage")
                        .HasColumnType("integer");

                    b.Property<int?>("WriteSpeed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ComponentId" }, "IX_ComponentSpecs_ComponentId")
                        .IsUnique();

                    b.ToTable("ComponentSpecs", (string)null);
                });

            modelBuilder.Entity("PcBuildApp.Data.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_Manufacturers_Name")
                        .IsUnique();

                    b.ToTable("Manufacturers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Leading CPU manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Intel"
                        },
                        new
                        {
                            Id = 2,
                            Description = "CPU and GPU manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "AMD"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Leading GPU manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "NVIDIA"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Memory and PSU manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Corsair"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Motherboard manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "ASUS"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Cooling manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Noctua"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Case manufacturer",
                            InsertedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Fractal Design"
                        });
                });

            modelBuilder.Entity("PcBuildApp.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("InsertedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("ModifiedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_Users_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "IX_Users_UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
